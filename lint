#!/bin/bash

cp ./lint ./.git/hooks/pre-commit

mod=${1:-./src}
# mod=${mod//\./\/}

echo "Formatting code (autopep) $mod ..."
autopep8 --in-place --aggressive --aggressive --recursive .
if [ $? -ne 0 ]; then { echo "Failed, aborting." ; exit 1; } fi

echo "Formatting code (black) $mod ..."
black -S --line-length 512 $mod
if [ $? -ne 0 ]; then { echo "Failed, aborting." ; exit 1; } fi

echo "Sorting imports (isort) $mod ..."
isort $mod/*.py
if [ $? -ne 0 ]; then { echo "Failed, aborting." ; exit 1; } fi

echo "Linting (pylint) $mod ..."
find $mod -iname "*.py" | xargs pylint -d too-few-public-methods -d missing-docstring -d unused-argument -d no-self-use -d unused-variable -d line-too-long
if [ $? -ne 0 ]; then { echo "Failed, aborting." ; exit 1; } fi

echo "Linting (flake8) $mod ..."
# flake8 --ignore=E501 --use-flake8-tabs $mod
flake8 --ignore=E501 $mod
if [ $? -ne 0 ]; then { echo "Failed, aborting." ; exit 1; } fi

echo "Assessing style (pycodestyle) $mod ..."
pycodestyle --first $mod
if [ $? -ne 0 ]; then { echo "Failed, aborting." ; exit 1; } fi

echo "Type Checking (mypy) $mod ..."
mypy --strict $mod
if [ $? -ne 0 ]; then { echo "Failed, aborting." ; exit 1; } fi

echo "Complexity check $mod ..."
xenon --max-absolute A --max-modules A --max-average A $mod
if [ $? -ne 0 ]; then { echo "Warning." ; } fi
xenon --max-absolute B --max-modules A --max-average A $mod
if [ $? -ne 0 ]; then { echo "Failed, aborting." ; exit 1; } fi

echo "Done."
