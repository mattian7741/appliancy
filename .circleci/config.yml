version: 2.1

always_run: &always_run
  filters:
    tags:
      only: /.*/

release_only: &release_only
  filters:
    tags:
      only: /[0-9]+(\.[0-9]+)*/
    branches:
      ignore: /.*/

jobs:
  build_verify_lint:
    docker:
      - image: circleci/python:3.7
      - image: rabbitmq:3.8.16-management-alpine
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test
            codecov
      - run:
          name: "Enforce PEP8"
          command: |
            . venv/bin/activate
            autopep8 --aggressive --aggressive --recursive ./ergo --diff --exit-code
      - run:
          name: "Enforce black style"
          command: |
            . venv/bin/activate
            black -S --line-length 512 ./ergo --check --diff
      - run:
          name: "Enforce isort"
          command: |
            . venv/bin/activate
            isort ./ergo/*.py -c
      - store_artifacts:
          path: htmlcov/

  test-python-install:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
      - image: rabbitmq:3.8.16-management-alpine
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test
            codecov
      - store_artifacts:
          path: htmlcov/
      - run:
          name: Smoke Test Install
          command: |
            python --version
            sudo pip3 install circleci
  integration:
    docker:
      - image: circleci/python:3.7
    steps:
      - run: It works!
      - run: echo $RUN_EXTRA_TESTS
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run: # $PYPI_PASSWORD set in CircleCi > Settings > Environment variables
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = mattian7741" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            pip install twine
            twine upload dist/*

workflows:
  build_and_deploy:
    jobs:
      - build_verify_lint:
          <<: *always_run
      - test-python-install:
          name: test-python-install-3.7
          version: "3.7"
          requires:
            - build_verify_lint
      - test-python-install:
          name: test-python-install-3.8
          version: "3.8"
          requires:
            - build_verify_lint
      - test-python-install:
          name: test-python-install-3.9
          version: "3.9"
          requires:
            - build_verify_lint
      - test-python-install:
          name: test-python-install-3.10
          version: "3.10"
          requires:
            - build_verify_lint
      - deploy:
          <<: *release_only
          requires:
            - build_verify_lint