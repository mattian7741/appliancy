version: 2.1
jobs:
  test:
    machine:
      image: ubuntu-2004:202107-02
      docker_layer_caching: true
    parameters:
      python_version:
        type: string
    environment:
      ERGO_PYTHON_VERSION: << parameters.python_version >> 
    steps:
      - checkout
      - run:
          name: build image
          command: make build
      - run:
          name: run tests
          command: make test
      - store_artifacts:
          path: htmlcov/
  integration:
    docker:
      - image: circleci/python:3.7
    steps:
      - run: It works!
      - run: echo $RUN_EXTRA_TESTS
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run: # $PYPI_PASSWORD set in CircleCi > Settings > Environment variables
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = mattian7741" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            pip install twine
            twine upload dist/*
workflows:
  build_and_deploy:
    jobs:
      - test:
          name: test-3.6
          python_version: "3.6"
      - test:
          name: test-3.7
          python_version: "3.7"
      - test:
          name: test-3.8
          python_version: "3.8"
      - test:
          name: test-3.9
          python_version: "3.9"
      - deploy:
          requires:
            - test-3.6
            - test-3.7
            - test-3.8
            - test-3.9
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*\-alpha/
            branches:
              ignore: /.*/
